@model NGnono.FMNote.WebSite4App.Core.Models.ViewModel.BillCreateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>BillEntity</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Amount)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Amount)
            @Html.ValidationMessageFor(model => model.Amount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Mode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Mode)
            @Html.ValidationMessageFor(model => model.Mode)
        </div>

        <div>
            <label for="txt_tag_search">标签</label>
            <a href="@Url.Action("List", "Tag")">编辑</a>
            <ul data-role="listview" id="ul_lst_tags" data-inset="true">
            </ul>
        </div>

        <div id="div_tag_container">
            <input type="text" id="txt_tag_search" value="" />

            <ul id="suggestions" class="ui-listview ui-listview-inset ui-corner-all ui-shadow" data-inset="true" data-role="listview"></ul>
        </div>

        <div class="editor-label">
            <label for="txt_category_search">分类</label>
            <a href="@Url.Action("List", "Category")">编辑</a>
        </div>

        <ul id="ul_ctg">
        </ul>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="button" value="addNewProperties" id="btn_addExtend" />
        </p>

        <div id="div_extend_container">
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section HeaderStyles{
    @Styles.Render("~/Content/jqmwidgetcss")
}

@section FooterScripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqmwidget")

    <script type="text/javascript">
        $(document).ready(init);
        var extendCount = 1;

        function getJsonData(str) {
            return eval("(" + str + ")");
        }

        //tag event
        //+
        var tagCount = 0;
        var tagLimit = 3;
        //+-
        var tagTotal = 0;

        function tagEventInit() {
            $('#txt_tag_search').autocomplete({
                target: $('#suggestions'),
                source: '@Url.Action("Search", "Tag")',
                minLength: 1,
                builder: function(data, settings) {
                    var str = [];
                    var vclass = '';

                    if (settings.klass) {
                        vclass = 'class="' + settings.klass + '"';
                    }
                    if (data) {
                        if (settings.dataHandler) {
                            data = settings.dataHandler(data);
                        }
                        $.each(data, function(index, value) {
                            // are we working with objects or strings?
                            if ($.isPlainObject(value)) {
                                if (settings.transformResponse) {
                                    value = settings.transformResponse(value);
                                }
                                str.push('<li ' + vclass + ' data-icon=' + settings.icon + '><a href="' + settings.link + encodeURIComponent(value.value) + '" data-transition="' + settings.transition + '" data-autocomplete=\'' + JSON.stringify(value).replace(/'/g, "&#39;") + '\'>' + settings.labelHTML(value.label) + '</a></li>');
                            } else {
                                str.push('<li ' + vclass + ' data-icon=' + settings.icon + '><a href="' + settings.link + encodeURIComponent(value) + '" data-transition="' + settings.transition + '">' + settings.labelHTML(value) + '</a></li>');
                            }
                        });
                    }

                    return str;
                },
                callback: function(e) {
                    var $a = $(e.currentTarget);
                    var d = getJsonData($a.attr('data-autocomplete'));
                    if (tagTotal >= tagLimit) {
                        alert('tag 标签最多选择3个！');
                        return;
                    }

                    tagCount++;
                    tagTotal++;
                    $('#ul_lst_tags').append('<li id="li_tags_' + tagCount + '"><input type="hidden" name="tags" value="' + d.value + '" /><a href="javascript:void(0);" title="' + $a.text() + '">' + $a.text() + '</a></li>');

                    //alert($('#ul_lst_tags').html());

                    $('#ul_lst_tags li').swipeDelete({
                        click: function(e2) {
                            e2.preventDefault();
                            $(this).parents('li').remove();
                            tagTotal--;
                        }
                    });


                    $('#ul_lst_tags').trigger('create');
                    $('#txt_tag_search').val($a.text()); // place the value of the selection into the search box
                    $("#txt_tag_search").autocomplete('clear'); // clear the listview
                }
            });
        }

        //categroy event

        function categoryInit() {
            var $ul = $('#ul_ctg');

            $.get('@Url.Action("GetAll", "Category")', function(result) {
                $ul.html(result);
                $ul.mobiscroll().treelist({
                    theme: 'default',
                    lang: 'zh',
                    display: 'bottom',
                    mode: 'scroller',
                    //labels: ['1级', '2级', '3级'],
                    onSelect: function (vt, inst) {
                        alert(inst.getText());
                    }
                });

                $('#ul_ctg_dummy').trigger('create');
            });

        }

        function init() {
            var $btn = $('#btn_addExtend');
            $btn.bind('click', function(event) {
                event.stopPropagation();
                event.preventDefault();
                $btn.enable = false;
                var extendHtml = '<div id ="div_extend_' + extendCount + '"><label for="txtExtend_name_' + extendCount + '" class="ui-input-text">key' + extendCount + '</label><input id="txtExtend_name_' + extendCount + '" name="txtExtend_name"/><label for="txtExtend_val_' + extendCount + '" class="ui-input-text">val' + extendCount + '</label><input id="txtExtend_val_' + extendCount + '" name="txtExtend_val"/></div>';
                $('#div_extend_container').append(extendHtml);

                var $ec = $('#div_extend_' + extendCount);
                $ec.bind('click', function(event1) {
                    event1.stopPropagation();
                    event1.preventDefault();
                    $ec.enable = false;
                    var $a = $ec.find('a');
                    if ($a.size() == 0) {
                        var delHtml = '<a id="" onclick="delHtml(\'' + $ec.attr('id') + '\');" href="javascript:void(0);" >del</a>';
                        $ec.append(delHtml);

                    } else {
                        $a.remove();
                    }

                    $ec.trigger('create');
                    $ec.enable = true;
                });

                $('#div_extend_container').trigger('create');
                extendCount++;
                $btn.enable = true;
            });


            //categor
            categoryInit();
            //tag
            tagEventInit();
        }

        function delHtml(id) {
            $('#' + id).remove();
        }

    </script>
}
